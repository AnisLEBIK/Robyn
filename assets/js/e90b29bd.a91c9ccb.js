(self.webpackChunkmmm_for_all=self.webpackChunkmmm_for_all||[]).push([[131],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return u},kt:function(){return m}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=r.createContext({}),c=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(l.Provider,{value:n},e.children)},f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(t),m=i,h=d["".concat(l,".").concat(m)]||d[m]||f[m]||a;return t?r.createElement(h,o(o({ref:n},u),{},{components:t})):r.createElement(h,o({ref:n},u))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=d;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var c=2;c<a;c++)o[c]=t[c];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},3919:function(e,n,t){"use strict";function r(e){return!0===/^(\w*:|\/\/)/.test(e)}function i(e){return void 0!==e&&!r(e)}t.d(n,{b:function(){return r},Z:function(){return i}})},4996:function(e,n,t){"use strict";t.d(n,{C:function(){return a},Z:function(){return o}});var r=t(2263),i=t(3919);function a(){var e=(0,r.Z)().siteConfig,n=(e=void 0===e?{}:e).baseUrl,t=void 0===n?"/":n,a=e.url;return{withBaseUrl:function(e,n){return function(e,n,t,r){var a=void 0===r?{}:r,o=a.forcePrependBaseUrl,s=void 0!==o&&o,l=a.absolute,c=void 0!==l&&l;if(!t)return t;if(t.startsWith("#"))return t;if((0,i.b)(t))return t;if(s)return n+t;var u=t.startsWith(n)?t:n+t.replace(/^\//,"");return c?e+u:u}(a,t,e,n)}}}function o(e,n){return void 0===n&&(n={}),(0,a().withBaseUrl)(e,n)}},1144:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return f},default:function(){return m}});var r=t(2122),i=t(9756),a=(t(7294),t(3905)),o=t(4996),s=["components"],l={id:"variable-transformations",title:"Variable Transformations"},c=void 0,u={unversionedId:"variable-transformations",id:"variable-transformations",isDocsHomePage:!1,title:"Variable Transformations",description:"There are two main variable transformations in the code:",source:"@site/docs/variable-transformations.mdx",sourceDirName:".",slug:"/variable-transformations",permalink:"/Robyn/docs/variable-transformations",editUrl:"https://github.com/facebookexperimental/Robyn/docs/variable-transformations.mdx",version:"current",frontMatter:{id:"variable-transformations",title:"Variable Transformations"},sidebar:"someSidebar",previous:{title:"Ridge Regression",permalink:"/Robyn/docs/ridge-regression"},next:{title:"Facebook Prophet - Trend, Seasonality and Holiday Effects",permalink:"/Robyn/docs/facebook-prophet"}},f=[{value:"Adstock",id:"adstock",children:[]},{value:"Diminishing returns",id:"diminishing-returns",children:[]}],d={toc:f};function m(e){var n=e.components,t=(0,i.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"There are two main variable transformations in the code:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Adstock"),(0,a.kt)("li",{parentName:"ol"},"Diminishing returns")),(0,a.kt)("h2",{id:"adstock"},"Adstock"),(0,a.kt)("p",null,"This technique is very useful for the better and more accurate representation of\nthe real carryover effect of marketing campaigns. Moreover, it helps to improve\nthe understanding of decay effects and how this can be used in campaign\nplanning. It reflects the theory that the effects of advertising can lag and\ndecay following initial exposure. In other words, not all effects of advertising\nare felt immediately\u2014memory builds and people sometimes delay action\u2014and this\nawareness diminishes as time passes."),(0,a.kt)("p",null,"There are two adstock techniques you may choose from the code:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Geometric: Traditionally the exponential decay function is used and on data\ncontrolled by theta the decay parameter. For example, an ad-stock of theta =\n0.75 means that 75% of the impressions in Period 1 were brought to Period 2.\nMathematically the traditional exponential adstock decay effect is defined\nas:")),(0,a.kt)("img",{alt:"Geometric Formula",src:(0,o.Z)("img/geometric.png")}),(0,a.kt)("p",null,"Below you will find the adstock geometric function within the code. Please bear\nin mind that all functions are located within the \u2018func.R\u2019 script."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"#### Define adstock geometric function\nf.adstockGeometric <- function(x, theta) {\n  x_decayed <- c(x[1] ,rep(0, length(x)-1))\n  for (xi in 2:length(x_decayed)) {\n    x_decayed[xi] <- x[xi] + theta * x_decayed[xi-1]\n  }\n  return(x_decayed)\n}\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Weibull: Weibull survival function (Weibull distribution) provides much more\nflexibility in the shape and scale of the distribution. The formula is\ndefined as: ",(0,a.kt)("img",{alt:"Weibull Formula",src:(0,o.Z)("img/weibull.png")}))),(0,a.kt)("p",null,"This is the function within the code for weibull:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"#### Define adstock weibull function\nf.adstockWeibull <- function(x, shape , scale) {\n  x_bin <- 1:length(x)\n  x_decayed <- c(x[1] ,rep(0, length(x)-1))\n  for (xi in 2:length(x_decayed)) {\n    theta <- 1-pweibull(x_bin[xi-1], shape = shape, scale = scale)\n    x_decayed[xi] <- x[xi] + theta * x_decayed[xi-1]\n  }\n  return(x_decayed)\n}\n")),(0,a.kt)("h2",{id:"diminishing-returns"},"Diminishing returns"),(0,a.kt)("p",null,"The theory of diminishing returns holds that each additional unit of advertising\nincreases the response, but at a declining rate. This key marketing principle is\nreflected in marketing mix models as a variable transformation."),(0,a.kt)("img",{alt:"Diminishing returns1",src:(0,o.Z)("img/diminishingreturns1.png")}),(0,a.kt)("p",null,"The nonlinear response to a media variable on the dependent variable can be\nmodelled using a variety of functions. For example, we can use a simple\nlogarithm transformation (taking the log of the units of advertising log(x) ),\nor a power transformation (x^alpha). In the case of a power transformation, the\nmodeler tests the different variables (different levels of parameter x) for the\nhighest significance of the variable in the model and the highest significance\nof the equation overall. However, the most common approach is to use the\nflexible S-curve transformation:"),(0,a.kt)("img",{alt:"Diminishing returns1",src:(0,o.Z)("img/diminishingreturns2.png")}),(0,a.kt)("p",null,"The variations of the parameters give modelers full flexibility on the look of\nthe S-curve, specifically the shape and the inflection points:"),(0,a.kt)("img",{alt:"Diminishing returns1",src:(0,o.Z)("img/diminishingreturns3.png")}),(0,a.kt)("p",null,"This is the function within the code for Diminishing Returns (Hill function):"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"## step 3: s-curve transformation\ngammaTrans <- round(quantile(seq(range(x_normalized)[1], range(x_normalized)[2], length.out = 100), gamma),4)\nx_scurve <-  x_normalized**alpha / (x_normalized**alpha + gammaTrans**alpha)\n")))}m.isMDXComponent=!0}}]);