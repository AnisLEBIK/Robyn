{"remainingRequest":"/Users/leonelsentana/Robyn/docs/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/leonelsentana/Robyn/docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/leonelsentana/Robyn/docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/leonelsentana/Robyn/docs/docs/doc8.md","dependencies":[{"path":"/Users/leonelsentana/Robyn/docs/docs/doc8.md","mtime":1604587771027},{"path":"/Users/leonelsentana/Robyn/docs/.docusaurus/docusaurus-plugin-content-docs/site-docs-doc-8-md-7c5.json","mtime":1605866086848},{"path":"/Users/leonelsentana/Robyn/docs/node_modules/cache-loader/dist/cjs.js","mtime":1604583336000},{"path":"/Users/leonelsentana/Robyn/docs/node_modules/babel-loader/lib/index.js","mtime":1604583336000},{"path":"/Users/leonelsentana/Robyn/docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1604583336000},{"path":"/Users/leonelsentana/Robyn/docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1604583336000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2xlb25lbHNlbnRhbmEvUm9ieW4vZG9jcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyI7aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20iL1VzZXJzL2xlb25lbHNlbnRhbmEvUm9ieW4vZG9jcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSI7aW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JztleHBvcnQgdmFyIGZyb250TWF0dGVyPXtpZDonZG9jOCcsdGl0bGU6J0NhbGlicmF0aW9uIHVzaW5nIGV4cGVyaW1lbnRhbCByZXN1bHRzJ307ZXhwb3J0IHZhciBtZXRhZGF0YT17InVudmVyc2lvbmVkSWQiOiJkb2M4IiwiaWQiOiJkb2M4IiwiaXNEb2NzSG9tZVBhZ2UiOmZhbHNlLCJ0aXRsZSI6IkNhbGlicmF0aW9uIHVzaW5nIGV4cGVyaW1lbnRhbCByZXN1bHRzIiwiZGVzY3JpcHRpb24iOiJDYWxpYnJhdGlvbiBjb25jZXB0Iiwic291cmNlIjoiQHNpdGUvZG9jcy9kb2M4Lm1kIiwicGVybWFsaW5rIjoiL1JvYnluL2RvY3MvZG9jOCIsImVkaXRVcmwiOiJodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2tleHBlcmltZW50YWwvUm9ieW4vZG9jcy9kb2M4Lm1kIiwic2lkZWJhciI6InNvbWVTaWRlYmFyIiwicHJldmlvdXMiOnsidGl0bGUiOiJBdXRvbWF0ZWQgaHlwZXJwYXJhbWV0ZXIgc2VsZWN0aW9uIGFuZCBvcHRpbWl6YXRpb24iLCJwZXJtYWxpbmsiOiIvUm9ieW4vZG9jcy9kb2M3In0sIm5leHQiOnsidGl0bGUiOiJPdXRwdXRzIGFuZCBkaWFnbm9zdGljcyIsInBlcm1hbGluayI6Ii9Sb2J5bi9kb2NzL2RvYzkifX07LyogQGpzeCBtZHggKi9pbXBvcnQgdXNlQmFzZVVybCBmcm9tJ0Bkb2N1c2F1cnVzL3VzZUJhc2VVcmwnO2V4cG9ydCB2YXIgcmlnaHRUb2M9W3t2YWx1ZTonQ2FsaWJyYXRpb24gY29uY2VwdCcsaWQ6J2NhbGlicmF0aW9uLWNvbmNlcHQnLGNoaWxkcmVuOltdfSx7dmFsdWU6J0NhbGlicmF0aW9uIGluIHRoZSBjb2RlJyxpZDonY2FsaWJyYXRpb24taW4tdGhlLWNvZGUnLGNoaWxkcmVuOltdfV07dmFyIGxheW91dFByb3BzPXtyaWdodFRvYzpyaWdodFRvY307dmFyIE1EWExheW91dD0id3JhcHBlciI7ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudChfcmVmKXt2YXIgY29tcG9uZW50cz1fcmVmLmNvbXBvbmVudHMscHJvcHM9X29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZixbImNvbXBvbmVudHMiXSk7cmV0dXJuIG1keChNRFhMYXlvdXQsX2V4dGVuZHMoe30sbGF5b3V0UHJvcHMscHJvcHMse2NvbXBvbmVudHM6Y29tcG9uZW50cyxtZHhUeXBlOiJNRFhMYXlvdXQifSksbWR4KCJoMyIseyJpZCI6ImNhbGlicmF0aW9uLWNvbmNlcHQifSwiQ2FsaWJyYXRpb24gY29uY2VwdCIpLG1keCgicCIsbnVsbCwiQnkgYXBwbHlpbmcgcmVzdWx0cyBmcm9tIHJhbmRvbWl6ZWQgY29udHJvbGxlZC1leHBlcmltZW50cywgeW91IG1heSBpbXByb3ZlIHRoZSBhY2N1cmFjeSBvZiB5b3VyIG1hcmtldGluZyBtaXggbW9kZWxzIGRyYW1hdGljYWxseS4gSXQgaXMgcmVjb21tZW5kZWQgdG8gcnVuIHRoZXNlIG9uIGEgcmVjdXJyZW50IGJhc2lzIHRvIGtlZXAgdGhlIG1vZGVsIGNhbGlicmF0ZWQgcGVybWFuZW50bHkuIEluIGdlbmVyYWwsIHdlIHdhbnQgdG8gY29tcGFyZSB0aGUgZXhwZXJpbWVudCByZXN1bHQgd2l0aCB0aGUgTU1NIGVzdGltYXRpb24gb2YgYSBtYXJrZXRpbmcgY2hhbm5lbC4gQ29uY2VwdHVhbGx5LCB0aGlzIG1ldGhvZCBpcyBsaWtlIGEgQmF5ZXNpYW4gbWV0aG9kLCBpbiB3aGljaCB3ZSB1c2UgZXhwZXJpbWVudCByZXN1bHRzIGFzIGEgcHJpb3IgdG8gc2hyaW5rIHRoZSBjb2VmZmljaWVudHMgb2YgbWVkaWEgdmFyaWFibGVzLiBBIGdvb2QgZXhhbXBsZSBvZiB0aGVzZSB0eXBlcyBvZiBleHBlcmltZW50cyBpcyBGYWNlYm9va1x1MjAxOXMgY29udmVyc2lvbiBsaWZ0IHRvb2wgd2hpY2ggY2FuIGhlbHAgZ3VpZGUgdGhlIG1vZGVsIHRvd2FyZHMgYSBzcGVjaWZpYyByYW5nZSBvZiBpbmNyZW1lbnRhbCB2YWx1ZXMuIiksbWR4KCJpbWciLHthbHQ6IkNhbGlicmF0aW9uIGNoYXJ0IixzcmM6dXNlQmFzZVVybCgnL2ltZy9jYWxpYnJhdGlvbjEucG5nJyl9KSxtZHgoInAiLG51bGwsIkZpZ3VyZSBpbGx1c3RyYXRlcyB0aGUgY2FsaWJyYXRpb24gcHJvY2VzcyBhYm92ZSBmb3Igb25lIE1NTSBjYW5kaWRhdGUgbW9kZWwuXG5UYWJsZSBiZWxvdyBpbGx1c3RyYXRlcyB0aGUgbW9kZWwgc2VsZWN0aW9uIG91dHB1dCBpbmNsdWRpbmcgRkIgbGlmdCBjYWxpYnJhdGlvbiBlbGVtZW50LiBNb2RlbGVycyBjYW4gc2VsZWN0IHRoZSB0b3AgbW9kZWxzIHdpdGggcmVsYXRpdmVseSBzbWFsbCBNQVBFIG1ldHJpY3MgYXMgdGhlIGNhbmRpZGF0ZXMgZm9yIHRoZSBmaW5hbCBtb2RlbC4gSW4gdGhpcyBleGFtcGxlLCB3ZSBzdWdnZXN0IHBpY2tpbmcgbW9kZWwgdHdvLCBhcyBpdCBoYXMgdGhlIG1pbmltdW0gIixtZHgoImVtIixudWxsLCJNQVBFKGNhbCxmYikiKSwiIGFuZCBpdHMgIixtZHgoImVtIixudWxsLCJNQVBFKGhvbGRvdXQpIiksIiBpcyBvbmx5IDAuNCUgbW9yZSB0aGFuIHRoZSBtaW5pbXVtIG9uZS4iKSxtZHgoImg0Iix7ImlkIjoiZXhhbXBsZS10YWJsZSJ9LCJFeGFtcGxlIFRhYmxlIiksbWR4KCJwIixudWxsLCJTYW1wbGUgb3V0cHV0IG9mIG1vZGVsIHNlbGVjdGlvbiBvZiBhIE1NTSB3aXRoIG9ubHkgdHdvIG1lZGlhIGNoYW5uZWxzLCBUViBhbmQgU29jaWFsIiksbWR4KCJpbWciLHthbHQ6IkNhbGlicmF0aW9uIHRhYmxlIixzcmM6dXNlQmFzZVVybCgnL2ltZy9jYWxpYnJhdGlvbjIucG5nJyl9KSxtZHgoInAiLG51bGwsIk5vdGUgdGhhdCAiLG1keCgiZW0iLG51bGwsIk1BUEUoY2FsLGZiKSIpLCIgd2lsbCBsaWtlbHkgdmFyeSBtb3JlIHdpZGVseSB0aGFuICIsbWR4KCJlbSIsbnVsbCwiTUFQRShob2xkb3V0KSIpLCIgLiBHaXZlbiB0aGlzLCBjYWxpYnJhdGlvbiBjYW4gaW1wcm92ZSBwZXJmb3JtYW5jZSB3aXRob3V0IHN1YnN0YW50aWFsbHkgc2FjcmlmaWNpbmcgYmFja3Rlc3RpbmcgcGVyZm9ybWFuY2UuXG5UaGlzIGNhbGlicmF0aW9uIG1ldGhvZCBjYW4gYmUgYXBwbGllZCB0byBvdGhlciBtZWRpYSBjaGFubmVscyB3aGljaCBydW4gZXhwZXJpbWVudHMsIHRoZSBtb3JlIGNoYW5uZWxzIHRoYXQgYXJlIGNhbGlicmF0ZWQsIHRoZSBtb3JlIGFjY3VyYXRlIHRoZSBNTU0gbW9kZWwuICIsbWR4KCJlbSIsbnVsbCwiWW91IG1heSBmaW5kIHRoZSBjYWxpYnJhdGlvbiBmdW5jdGlvbiBpbiB0aGUgXHUyMDE4ZnVuYy5SXHUyMDE5IHNjcmlwdC4iKSksbWR4KCJoMyIseyJpZCI6ImNhbGlicmF0aW9uLWluLXRoZS1jb2RlIn0sIkNhbGlicmF0aW9uIGluIHRoZSBjb2RlIiksbWR4KCJwIixudWxsLCJTbywgaG93IGRvIHdlIGFwcGx5IHRoaXMgaW4gb3VyIGNvZGU/IiksbWR4KCJvbCIsbnVsbCxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSwiRmlyc3QsIHdlIGNoZWNrIGlmIG1lZGlhIGNoYW5uZWxzIHRvIGJlIGNhbGlicmF0ZWQgYWN0dWFsbHkgaGF2ZSBhIG1lZGlhIHZhcmlhYmxlIGNyZWF0ZWQuIiksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sIkFmdGVyIHRoYXQsIHdlIGNvbGxlY3QgYWxsIGRpZmZlcmVudCBtZWRpYSB0byBiZSBjYWxpYnJhdGVkLiBDb25zZXF1ZW50bHksIHdlIGxvb3Agb3ZlciBlYWNoIGxpZnQgY2hhbm5lbCAoV2hlcmUgZm9yIGVhY2ggb2YgdGhlbSB3ZSBpdGVyYXRlIG92ZXIgYWxsIGRpZmZlcmVudCBzdHVkaWVzIGlmIG1vcmUgdGhhbiBvbmUsIGRldGVybWluaW5nIHRoZSBkYXRlIHJhbmdlIG9mIGVhY2ggc3R1ZHkpIiksbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sIkluIGFkZGl0aW9uLCB3ZSBjb252ZXJ0IGRhdGEgZnJvbSB3ZWVrcyB0byBkYXlzIChQbGVhc2Ugbm90ZSB0aGUgKjcgaW4gdGhlIGZvcm11bGEgZm9yIG1tbURheXMsIHRoaXMgaXMgYXNzdW1pbmcgeW91IHdpbGwgdXNlIHdlZWtseSBkYXRhIGFzIGEgYmFzaXMgZm9yIHlvdXIgbW9kZWwpLiIpLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LCJGaW5hbGx5LCBhbmQgb25jZSBib3RoIGxpZnQgc3R1ZHkgYW5kIE1NTSBkYXRlcyBhcmUgYm90aCBpbiBkYXlzLCB3ZSBzY2FsZSB0aGUgdG90YWwgZGVjb21wb3NlZCBtb2RlbCBwcmVkaWN0ZWQgc2FsZXMgaW50byB0aGUgZXhhY3QgbnVtYmVyIG9mIGRheXMgdGhlIGxpZnQgc3R1ZHkgaGFkIHRvIGJlIGNvbXBhcmFibGUgd2l0aCBwcmV2aW91c2x5IHVwbG9hZGVkIGxpZnRBYnMgbnVtYmVyIHVuZGVyIHRoZSBzZXRfbGlmdCB2YXJpYWJsZSAocmVtZW1iZXIgbGlmdEFicyB2YWx1ZXMgaW4gc2V0X2xpZnQgdmFyaWFibGUgaGF2ZSB0byBiZSBhYnNvbHV0ZSBhbmQgbWVhc3VyaW5nIHRoZSBzYW1lIG1ldHJpYyBhcyB0aGUgbW9kZWwgZG9lcyBpZS4gdG90YWwgaW5jcmVtZW50YWwgc2FsZXMgdnMuIG1vZGVsIHByZWRpY3RlZCBzYWxlcykiKSksbWR4KCJwcmUiLG51bGwsbWR4KCJjb2RlIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicHJlIn0se30pLCIjIyMjIERlZmluZSBsaWZ0IGNhbGlicmF0aW9uIGZ1bmN0aW9uXG5mLmNhbGlicmF0ZUxpZnQgPC0gZnVuY3Rpb24oZGVjb21wQ29sbGVjdCwgc2V0X2xpZnQpIHtcblxuICBjaGVja19zZXRfbGlmdCA8LSBhbnkoc2FwcGx5KHNldF9saWZ0JGNoYW5uZWwsIGZ1bmN0aW9uKHgpIGFueShzdHJfZGV0ZWN0KHgsIHNldF9tZWRpYVZhck5hbWUpKSk9PUYpICNjaGVjayBpZiBhbnkgbGlmdCBjaGFubmVsIGRvZXNuJ3QgaGF2ZSBtZWRpYSB2YXJcbiAgaWYgKGNoZWNrX3NldF9saWZ0KSB7c3RvcChcInNldF9saWZ0IGNoYW5uZWxzIG11c3QgaGF2ZSBtZWRpYSB2YXJpYWJsZVwiKX1cbiAgIyMgcHJlcCBsaWZ0IGlucHV0ICBcbiAgZ2V0TGlmdE1lZGlhIDwtIHVuaXF1ZShzZXRfbGlmdCRjaGFubmVsKVxuICBnZXREZWNvbXBWZWMgPC0gZGVjb21wQ29sbGVjdCR4RGVjb21wVmVjXG5cbiAgIyMgbG9vcCBhbGwgbGlmdCBpbnB1dFxuICBsaWZ0Q29sbGVjdCA8LSBsaXN0KClcbiAgZm9yIChtIGluIDE6bGVuZ3RoKGdldExpZnRNZWRpYSkpIHsgIyBsb29wIHBlciBsaWZ0IGNoYW5uZWxcblxuICAgIGxpZnRXaGljaCA8LSBzdHJfd2hpY2goc2V0X2xpZnQkY2hhbm5lbCwgZ2V0TGlmdE1lZGlhW21dKVxuXG4gICAgbGlmdENvbGxlY3QyIDwtIGxpc3QoKVxuICAgIGZvciAobHcgaW4gMTpsZW5ndGgobGlmdFdoaWNoKSkgeyAjIGxvb3AgcGVyIGxpZnQgdGVzdCBwZXIgY2hhbm5lbFxuXG4gICAgICAjIyBnZXQgbGlmdCBwZXJpb2Qgc3Vic2V0XG4gICAgICBsaWZ0U3RhcnQgPC0gc2V0X2xpZnRbbGlmdFdoaWNoW2x3XSwgbGlmdFN0YXJ0RGF0ZV1cbiAgICAgIGxpZnRFbmQgPC0gc2V0X2xpZnRbbGlmdFdoaWNoW2x3XSwgbGlmdEVuZERhdGVdXG4gICAgICBsaWZ0UGVyaW9kVmVjIDwtIGdldERlY29tcFZlY1tEUyA+PSBsaWZ0U3RhcnQgJiBEUyA8PSBsaWZ0RW5kLCBjKFwiRFNcIiwgZ2V0TGlmdE1lZGlhW21dKSwgd2l0aCA9IEZdXG5cbiAgICAgICMjIHNjYWxlIGRlY29tcFxuICAgICAgbW1tRGF5cyA8LSBucm93KGxpZnRQZXJpb2RWZWMpICogN1xuICAgICAgbGlmdERheXMgPC0gYXMuaW50ZWdlcihsaWZ0RW5kLSBsaWZ0U3RhcnQgKyAxKVxuICAgICAgeV9oYXRMaWZ0IDwtIHN1bSh1bmxpc3QoZ2V0RGVjb21wVmVjWywgLTFdKSkgIyB0b3RhbCBwcmVkIHNhbGVzXG4gICAgICB4X2RlY29tcExpZnQgPC0gc3VtKGxpZnRQZXJpb2RWZWNbLDJdKVxuICAgICAgeF9kZWNvbXBMaWZ0U2NhbGVkIDwtIHhfZGVjb21wTGlmdCAvIG1tbURheXMgKiBsaWZ0RGF5c1xuXG4gICAgICAjIyBvdXRwdXRcbiAgICAgIGxpZnRDb2xsZWN0MltbbHddXSA8LSBkYXRhLnRhYmxlKGxpZnRNZWRpYSA9IGdldExpZnRNZWRpYVttXSAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaWZ0U3RhcnQgPSBsaWZ0U3RhcnQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBsaWZ0RW5kID0gbGlmdEVuZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpZnRBYnMgPSBzZXRfbGlmdFtsaWZ0V2hpY2hbbHddLCBsaWZ0QWJzXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRlY29tcEFic1NjYWxlZCA9IHhfZGVjb21wTGlmdFNjYWxlZClcbiAgICB9XG4gICAgbGlmdENvbGxlY3RbW21dXSA8LSByYmluZGxpc3QobGlmdENvbGxlY3QyKVxuICB9XG4iKSksbWR4KCJwIixudWxsLCJUaGUgbGFzdCBzdGVwIGlzIHRvIGNhbGN1bGF0ZSB0aGUgTUFQRS4gVGhpcyB3aWxsIGJlIHRoZSBrZXkgbWV0cmljIHRvIGRlZmluZSB0aGUgbW9kZWwgdGhhdCBpcyBjbG9zZXN0IHRvIGFjdHVhbCBpbmNyZW1lbnRhbCBzYWxlcyBkdXJpbmcgcGVyaW9kcyBmb3IgdGhlIGxpZnQgc3R1ZHkuIEl0IHdpbGwgdGhlcmVmb3JlIGFsbG93IHVzIHRvIG1ha2UgYSBkZWNpc2lvbiBhcyBwZXIgdGhlIGV4YW1wbGUgb24gdGhlICIsbWR4KCJhIixfZXh0ZW5kcyh7cGFyZW50TmFtZToicCJ9LHsiaHJlZiI6IiNleGFtcGxlLXRhYmxlIn0pLG1keCgic3Ryb25nIix7cGFyZW50TmFtZToiYSJ9LCJ0YWJsZSIpKSwiLiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIsX2V4dGVuZHMoe3BhcmVudE5hbWU6InByZSJ9LHt9KSwiICAjIyBnZXQgbWFwZV9saWZ0XG4gIGxpZnRDb2xsZWN0IDwtIHJiaW5kbGlzdChsaWZ0Q29sbGVjdClbLCBtYXBlX2xpZnQgOj0gYWJzKChkZWNvbXBBYnNTY2FsZWQgLSBsaWZ0QWJzKSAvIGxpZnRBYnMpICogMTAwXVxuICByZXR1cm4obGlmdENvbGxlY3QpXG59XG4iKSkpO307TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},null]}