{"remainingRequest":"/Users/leonelsentana/Robyn/docs/node_modules/babel-loader/lib/index.js??ref--11-1!/Users/leonelsentana/Robyn/docs/node_modules/@docusaurus/mdx-loader/src/index.js??ref--11-2!/Users/leonelsentana/Robyn/docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js??ref--11-3!/Users/leonelsentana/Robyn/docs/docs/variable-transformations.md","dependencies":[{"path":"/Users/leonelsentana/Robyn/docs/docs/variable-transformations.md","mtime":1614648847000},{"path":"/Users/leonelsentana/Robyn/docs/.docusaurus/docusaurus-plugin-content-docs/default/site-docs-variable-transformations-md-0d9.json","mtime":1617717045945},{"path":"/Users/leonelsentana/Robyn/docs/node_modules/cache-loader/dist/cjs.js","mtime":1614158977446},{"path":"/Users/leonelsentana/Robyn/docs/node_modules/babel-loader/lib/index.js","mtime":1614158977141},{"path":"/Users/leonelsentana/Robyn/docs/node_modules/@docusaurus/mdx-loader/src/index.js","mtime":1614159022717},{"path":"/Users/leonelsentana/Robyn/docs/node_modules/@docusaurus/plugin-content-docs/lib/markdown/index.js","mtime":1614159022317}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9leHRlbmRzIGZyb20iL1VzZXJzL2xlb25lbHNlbnRhbmEvUm9ieW4vZG9jcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vZXh0ZW5kcyI7aW1wb3J0IF9vYmplY3RXaXRob3V0UHJvcGVydGllc0xvb3NlIGZyb20iL1VzZXJzL2xlb25lbHNlbnRhbmEvUm9ieW4vZG9jcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0V2l0aG91dFByb3BlcnRpZXNMb29zZSI7aW1wb3J0IFJlYWN0IGZyb20ncmVhY3QnO2ltcG9ydHttZHh9ZnJvbSdAbWR4LWpzL3JlYWN0JztleHBvcnQgdmFyIGZyb250TWF0dGVyPXtpZDondmFyaWFibGUtdHJhbnNmb3JtYXRpb25zJyx0aXRsZTonVmFyaWFibGUgVHJhbnNmb3JtYXRpb25zJ307ZXhwb3J0IHZhciBtZXRhZGF0YT17InVudmVyc2lvbmVkSWQiOiJ2YXJpYWJsZS10cmFuc2Zvcm1hdGlvbnMiLCJpZCI6InZhcmlhYmxlLXRyYW5zZm9ybWF0aW9ucyIsImlzRG9jc0hvbWVQYWdlIjpmYWxzZSwidGl0bGUiOiJWYXJpYWJsZSBUcmFuc2Zvcm1hdGlvbnMiLCJkZXNjcmlwdGlvbiI6IlRoZXJlIGFyZSB0d28gbWFpbiB2YXJpYWJsZSB0cmFuc2Zvcm1hdGlvbnMgaW4gdGhlIGNvZGU6Iiwic291cmNlIjoiQHNpdGUvZG9jcy92YXJpYWJsZS10cmFuc2Zvcm1hdGlvbnMubWQiLCJzbHVnIjoiL3ZhcmlhYmxlLXRyYW5zZm9ybWF0aW9ucyIsInBlcm1hbGluayI6Ii9Sb2J5bi9kb2NzL3ZhcmlhYmxlLXRyYW5zZm9ybWF0aW9ucyIsImVkaXRVcmwiOiJodHRwczovL2dpdGh1Yi5jb20vZmFjZWJvb2tleHBlcmltZW50YWwvUm9ieW4vZG9jcy92YXJpYWJsZS10cmFuc2Zvcm1hdGlvbnMubWQiLCJ2ZXJzaW9uIjoiY3VycmVudCIsInNpZGViYXIiOiJzb21lU2lkZWJhciIsInByZXZpb3VzIjp7InRpdGxlIjoiUmlkZ2UgUmVncmVzc2lvbiIsInBlcm1hbGluayI6Ii9Sb2J5bi9kb2NzL3JpZGdlLXJlZ3Jlc3Npb24ifSwibmV4dCI6eyJ0aXRsZSI6IkZhY2Vib29rIFByb3BoZXQgLSBUcmVuZCwgU2Vhc29uYWxpdHkgYW5kIEhvbGlkYXkgRWZmZWN0cyIsInBlcm1hbGluayI6Ii9Sb2J5bi9kb2NzL2ZhY2Vib29rLXByb3BoZXQifX07LyogQGpzeFJ1bnRpbWUgY2xhc3NpYyAqLyAvKiBAanN4IG1keCAqL2ltcG9ydCB1c2VCYXNlVXJsIGZyb20nQGRvY3VzYXVydXMvdXNlQmFzZVVybCc7ZXhwb3J0IHZhciB0b2M9W3t2YWx1ZTonQWRzdG9jaycsaWQ6J2Fkc3RvY2snLGNoaWxkcmVuOltdfSx7dmFsdWU6J0RpbWluaXNoaW5nIHJldHVybnMnLGlkOidkaW1pbmlzaGluZy1yZXR1cm5zJyxjaGlsZHJlbjpbXX1dO3ZhciBsYXlvdXRQcm9wcz17dG9jOnRvY307dmFyIE1EWExheW91dD0id3JhcHBlciI7ZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTURYQ29udGVudChfcmVmKXt2YXIgY29tcG9uZW50cz1fcmVmLmNvbXBvbmVudHMscHJvcHM9X29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzTG9vc2UoX3JlZixbImNvbXBvbmVudHMiXSk7cmV0dXJuIG1keChNRFhMYXlvdXQsX2V4dGVuZHMoe30sbGF5b3V0UHJvcHMscHJvcHMse2NvbXBvbmVudHM6Y29tcG9uZW50cyxtZHhUeXBlOiJNRFhMYXlvdXQifSksbWR4KCJwIixudWxsLCJUaGVyZSBhcmUgdHdvIG1haW4gdmFyaWFibGUgdHJhbnNmb3JtYXRpb25zIGluIHRoZSBjb2RlOiIpLG1keCgib2wiLG51bGwsbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sIkFkc3RvY2siKSxtZHgoImxpIix7cGFyZW50TmFtZToib2wifSwiRGltaW5pc2hpbmcgcmV0dXJucyIpKSxtZHgoImgyIix7ImlkIjoiYWRzdG9jayJ9LCJBZHN0b2NrIiksbWR4KCJwIixudWxsLCJUaGlzIHRlY2huaXF1ZSBpcyB2ZXJ5IHVzZWZ1bCBmb3IgdGhlIGJldHRlciBhbmQgbW9yZSBhY2N1cmF0ZSByZXByZXNlbnRhdGlvbiBvZlxudGhlIHJlYWwgY2FycnlvdmVyIGVmZmVjdCBvZiBtYXJrZXRpbmcgY2FtcGFpZ25zLiBNb3Jlb3ZlciwgaXQgaGVscHMgdG8gaW1wcm92ZVxudGhlIHVuZGVyc3RhbmRpbmcgb2YgZGVjYXkgZWZmZWN0cyBhbmQgaG93IHRoaXMgY2FuIGJlIHVzZWQgaW4gY2FtcGFpZ25cbnBsYW5uaW5nLiBJdCByZWZsZWN0cyB0aGUgdGhlb3J5IHRoYXQgdGhlIGVmZmVjdHMgb2YgYWR2ZXJ0aXNpbmcgY2FuIGxhZyBhbmRcbmRlY2F5IGZvbGxvd2luZyBpbml0aWFsIGV4cG9zdXJlLiBJbiBvdGhlciB3b3Jkcywgbm90IGFsbCBlZmZlY3RzIG9mIGFkdmVydGlzaW5nXG5hcmUgZmVsdCBpbW1lZGlhdGVseVx1MjAxNG1lbW9yeSBidWlsZHMgYW5kIHBlb3BsZSBzb21ldGltZXMgZGVsYXkgYWN0aW9uXHUyMDE0YW5kIHRoaXNcbmF3YXJlbmVzcyBkaW1pbmlzaGVzIGFzIHRpbWUgcGFzc2VzLiIpLG1keCgicCIsbnVsbCwiVGhlcmUgYXJlIHR3byBhZHN0b2NrIHRlY2huaXF1ZXMgeW91IG1heSBjaG9vc2UgZnJvbSB0aGUgY29kZToiKSxtZHgoIm9sIixudWxsLG1keCgibGkiLHtwYXJlbnROYW1lOiJvbCJ9LCJHZW9tZXRyaWM6IFRyYWRpdGlvbmFsbHkgdGhlIGV4cG9uZW50aWFsIGRlY2F5IGZ1bmN0aW9uIGlzIHVzZWQgYW5kIG9uIGRhdGFcbmNvbnRyb2xsZWQgYnkgdGhldGEgdGhlIGRlY2F5IHBhcmFtZXRlci4gRm9yIGV4YW1wbGUsIGFuIGFkLXN0b2NrIG9mIHRoZXRhID1cbjAuNzUgbWVhbnMgdGhhdCA3NSUgb2YgdGhlIGltcHJlc3Npb25zIGluIFBlcmlvZCAxIHdlcmUgYnJvdWdodCB0byBQZXJpb2QgMi5cbk1hdGhlbWF0aWNhbGx5IHRoZSB0cmFkaXRpb25hbCBleHBvbmVudGlhbCBhZHN0b2NrIGRlY2F5IGVmZmVjdCBpcyBkZWZpbmVkXG5hczoiKSksbWR4KCJpbWciLHthbHQ6Ikdlb21ldHJpYyBGb3JtdWxhIixzcmM6dXNlQmFzZVVybCgnaW1nL2dlb21ldHJpYy5wbmcnKX0pLG1keCgicCIsbnVsbCwiQmVsb3cgeW91IHdpbGwgZmluZCB0aGUgYWRzdG9jayBnZW9tZXRyaWMgZnVuY3Rpb24gd2l0aGluIHRoZSBjb2RlLiBQbGVhc2UgYmVhclxuaW4gbWluZCB0aGF0IGFsbCBmdW5jdGlvbnMgYXJlIGxvY2F0ZWQgd2l0aGluIHRoZSBcdTIwMThmdW5jLlJcdTIwMTkgc2NyaXB0LiIpLG1keCgicHJlIixudWxsLG1keCgiY29kZSIse3BhcmVudE5hbWU6InByZSJ9LCIjIyMjIERlZmluZSBhZHN0b2NrIGdlb21ldHJpYyBmdW5jdGlvblxuZi5hZHN0b2NrR2VvbWV0cmljIDwtIGZ1bmN0aW9uKHgsIHRoZXRhKSB7XG4gIHhfZGVjYXllZCA8LSBjKHhbMV0gLHJlcCgwLCBsZW5ndGgoeCktMSkpXG4gIGZvciAoeGkgaW4gMjpsZW5ndGgoeF9kZWNheWVkKSkge1xuICAgIHhfZGVjYXllZFt4aV0gPC0geFt4aV0gKyB0aGV0YSAqIHhfZGVjYXllZFt4aS0xXVxuICB9XG4gIHJldHVybih4X2RlY2F5ZWQpXG59XG4iKSksbWR4KCJvbCIseyJzdGFydCI6Mn0sbWR4KCJsaSIse3BhcmVudE5hbWU6Im9sIn0sIldlaWJ1bGw6IFdlaWJ1bGwgc3Vydml2YWwgZnVuY3Rpb24gKFdlaWJ1bGwgZGlzdHJpYnV0aW9uKSBwcm92aWRlcyBtdWNoIG1vcmVcbmZsZXhpYmlsaXR5IGluIHRoZSBzaGFwZSBhbmQgc2NhbGUgb2YgdGhlIGRpc3RyaWJ1dGlvbi4gVGhlIGZvcm11bGEgaXNcbmRlZmluZWQgYXM6ICIsbWR4KCJpbWciLHthbHQ6IldlaWJ1bGwgRm9ybXVsYSIsc3JjOnVzZUJhc2VVcmwoJ2ltZy93ZWlidWxsLnBuZycpfSkpKSxtZHgoInAiLG51bGwsIlRoaXMgaXMgdGhlIGZ1bmN0aW9uIHdpdGhpbiB0aGUgY29kZSBmb3Igd2VpYnVsbDoiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLHtwYXJlbnROYW1lOiJwcmUifSwiIyMjIyBEZWZpbmUgYWRzdG9jayB3ZWlidWxsIGZ1bmN0aW9uXG5mLmFkc3RvY2tXZWlidWxsIDwtIGZ1bmN0aW9uKHgsIHNoYXBlICwgc2NhbGUpIHtcbiAgeF9iaW4gPC0gMTpsZW5ndGgoeClcbiAgeF9kZWNheWVkIDwtIGMoeFsxXSAscmVwKDAsIGxlbmd0aCh4KS0xKSlcbiAgZm9yICh4aSBpbiAyOmxlbmd0aCh4X2RlY2F5ZWQpKSB7XG4gICAgdGhldGEgPC0gMS1wd2VpYnVsbCh4X2Jpblt4aS0xXSwgc2hhcGUgPSBzaGFwZSwgc2NhbGUgPSBzY2FsZSlcbiAgICB4X2RlY2F5ZWRbeGldIDwtIHhbeGldICsgdGhldGEgKiB4X2RlY2F5ZWRbeGktMV1cbiAgfVxuICByZXR1cm4oeF9kZWNheWVkKVxufVxuIikpLG1keCgiaDIiLHsiaWQiOiJkaW1pbmlzaGluZy1yZXR1cm5zIn0sIkRpbWluaXNoaW5nIHJldHVybnMiKSxtZHgoInAiLG51bGwsIlRoZSB0aGVvcnkgb2YgZGltaW5pc2hpbmcgcmV0dXJucyBob2xkcyB0aGF0IGVhY2ggYWRkaXRpb25hbCB1bml0IG9mIGFkdmVydGlzaW5nXG5pbmNyZWFzZXMgdGhlIHJlc3BvbnNlLCBidXQgYXQgYSBkZWNsaW5pbmcgcmF0ZS4gVGhpcyBrZXkgbWFya2V0aW5nIHByaW5jaXBsZSBpc1xucmVmbGVjdGVkIGluIG1hcmtldGluZyBtaXggbW9kZWxzIGFzIGEgdmFyaWFibGUgdHJhbnNmb3JtYXRpb24uIiksbWR4KCJpbWciLHthbHQ6IkRpbWluaXNoaW5nIHJldHVybnMxIixzcmM6dXNlQmFzZVVybCgnaW1nL2RpbWluaXNoaW5ncmV0dXJuczEucG5nJyl9KSxtZHgoInAiLG51bGwsIlRoZSBub25saW5lYXIgcmVzcG9uc2UgdG8gYSBtZWRpYSB2YXJpYWJsZSBvbiB0aGUgZGVwZW5kZW50IHZhcmlhYmxlIGNhbiBiZVxubW9kZWxsZWQgdXNpbmcgYSB2YXJpZXR5IG9mIGZ1bmN0aW9ucy4gRm9yIGV4YW1wbGUsIHdlIGNhbiB1c2UgYSBzaW1wbGVcbmxvZ2FyaXRobSB0cmFuc2Zvcm1hdGlvbiAodGFraW5nIHRoZSBsb2cgb2YgdGhlIHVuaXRzIG9mIGFkdmVydGlzaW5nIGxvZyh4KSApLFxub3IgYSBwb3dlciB0cmFuc2Zvcm1hdGlvbiAoeF5hbHBoYSkuIEluIHRoZSBjYXNlIG9mIGEgcG93ZXIgdHJhbnNmb3JtYXRpb24sIHRoZVxubW9kZWxlciB0ZXN0cyB0aGUgZGlmZmVyZW50IHZhcmlhYmxlcyAoZGlmZmVyZW50IGxldmVscyBvZiBwYXJhbWV0ZXIgeCkgZm9yIHRoZVxuaGlnaGVzdCBzaWduaWZpY2FuY2Ugb2YgdGhlIHZhcmlhYmxlIGluIHRoZSBtb2RlbCBhbmQgdGhlIGhpZ2hlc3Qgc2lnbmlmaWNhbmNlXG5vZiB0aGUgZXF1YXRpb24gb3ZlcmFsbC4gSG93ZXZlciwgdGhlIG1vc3QgY29tbW9uIGFwcHJvYWNoIGlzIHRvIHVzZSB0aGVcbmZsZXhpYmxlIFMtY3VydmUgdHJhbnNmb3JtYXRpb246IiksbWR4KCJpbWciLHthbHQ6IkRpbWluaXNoaW5nIHJldHVybnMxIixzcmM6dXNlQmFzZVVybCgnaW1nL2RpbWluaXNoaW5ncmV0dXJuczIucG5nJyl9KSxtZHgoInAiLG51bGwsIlRoZSB2YXJpYXRpb25zIG9mIHRoZSBwYXJhbWV0ZXJzIGdpdmUgbW9kZWxlcnMgZnVsbCBmbGV4aWJpbGl0eSBvbiB0aGUgbG9vayBvZlxudGhlIFMtY3VydmUsIHNwZWNpZmljYWxseSB0aGUgc2hhcGUgYW5kIHRoZSBpbmZsZWN0aW9uIHBvaW50czoiKSxtZHgoImltZyIse2FsdDoiRGltaW5pc2hpbmcgcmV0dXJuczEiLHNyYzp1c2VCYXNlVXJsKCdpbWcvZGltaW5pc2hpbmdyZXR1cm5zMy5wbmcnKX0pLG1keCgicCIsbnVsbCwiVGhpcyBpcyB0aGUgZnVuY3Rpb24gd2l0aGluIHRoZSBjb2RlIGZvciBEaW1pbmlzaGluZyBSZXR1cm5zIChIaWxsIGZ1bmN0aW9uKToiKSxtZHgoInByZSIsbnVsbCxtZHgoImNvZGUiLHtwYXJlbnROYW1lOiJwcmUifSwiIyMgc3RlcCAzOiBzLWN1cnZlIHRyYW5zZm9ybWF0aW9uXG5nYW1tYVRyYW5zIDwtIHJvdW5kKHF1YW50aWxlKHNlcShyYW5nZSh4X25vcm1hbGl6ZWQpWzFdLCByYW5nZSh4X25vcm1hbGl6ZWQpWzJdLCBsZW5ndGgub3V0ID0gMTAwKSwgZ2FtbWEpLDQpXG54X3NjdXJ2ZSA8LSAgeF9ub3JtYWxpemVkKiphbHBoYSAvICh4X25vcm1hbGl6ZWQqKmFscGhhICsgZ2FtbWFUcmFucyoqYWxwaGEpXG4iKSkpO307TURYQ29udGVudC5pc01EWENvbXBvbmVudD10cnVlOw=="},null]}